{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet AddNewItemComponent = class AddNewItemComponent {\n  constructor(http) {\n    this.http = http;\n    this.itemName = \"\";\n    this.itemImage = \"\";\n    this.itemCategory = \"\";\n    this.unhealthyIngredients = \"\";\n    this.proteins = \"\";\n    this.fats = \"\";\n    this.carbohydrates = \"\";\n    this.calories = \"\";\n    this.healthy = \"\";\n    this.substitute = \"\";\n    //option(event:any){\n    //  this.itemCategory=event.target.value\n    // console.log(this.itemCategory)\n    //}\n    this.addproduct = new FormGroup({});\n    this.itemNamec = new FormControl('', [Validators.required]);\n    this.itemImagec = new FormControl('', [Validators.required]);\n    this.itemCategoryc = new FormControl('', [Validators.required]);\n    this.ingredientsc = new FormControl('', [Validators.required]);\n    this.proteinsc = new FormControl('', [Validators.required]);\n    this.fatsc = new FormControl('', [Validators.required]);\n    this.carbsc = new FormControl('', [Validators.required]);\n    this.caloriesc = new FormControl('', [Validators.required]);\n    this.healthyc = new FormControl('', [Validators.required]);\n    this.substitutec = new FormControl('', [Validators.required]);\n  }\n  getregister() {\n    let bodydata = {\n      \"itemName\": this.itemName,\n      \"itemImage\": this.itemImage,\n      \"itemCategory\": this.itemCategory,\n      \"unhealthyIngredients\": this.unhealthyIngredients,\n      \"proteins\": this.proteins,\n      \"fats\": this.fats,\n      \"carbohydrates\": this.carbohydrates,\n      \"calories\": this.calories,\n      \"healthy\": this.healthy,\n      \"substitute\": this.substitute\n    };\n    this.http.post(\"http://localhost:8000/productsDetails/createdata\", bodydata).subscribe(resultData => {\n      console.log(resultData);\n      alert('Customers was Successfully registered');\n    });\n  }\n  save() {\n    this.getregister();\n  }\n};\nAddNewItemComponent = __decorate([Component({\n  selector: 'app-add-new-item',\n  templateUrl: './add-new-item.component.html',\n  styleUrls: ['./add-new-item.component.css']\n})], AddNewItemComponent);\nexport { AddNewItemComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAE9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAIxB,aAAQ,GAAQ,EAAE;IAClB,cAAS,GAAQ,EAAE;IACnB,iBAAY,GAAQ,EAAE;IACtB,yBAAoB,GAAQ,EAAE;IAC9B,aAAQ,GAAQ,EAAE;IAClB,SAAI,GAAQ,EAAE;IACd,kBAAa,GAAQ,EAAE;IACvB,aAAQ,GAAQ,EAAE;IAClB,YAAO,GAAQ,EAAE;IACjB,eAAU,GAAQ,EAAE;IAGtB;IACA;IACC;IACD;IACA,eAAU,GAAE,IAAIJ,SAAS,CAAE,EAAE,CAAC;IAE9B,cAAS,GAAE,IAAID,WAAW,CAAC,EAAE,EAAC,CAC5BE,UAAU,CAACI,QAAQ,CACpB,CAAC;IAEF,eAAU,GAAE,IAAIN,WAAW,CAAC,EAAE,EAAC,CAC7BE,UAAU,CAACI,QAAQ,CACpB,CAAC;IAEF,kBAAa,GAAE,IAAIN,WAAW,CAAC,EAAE,EAAC,CAChCE,UAAU,CAACI,QAAQ,CACpB,CAAC;IAEF,iBAAY,GAAE,IAAIN,WAAW,CAAC,EAAE,EAAC,CAC/BE,UAAU,CAACI,QAAQ,CACpB,CAAC;IAEF,cAAS,GAAE,IAAIN,WAAW,CAAC,EAAE,EAAC,CAC5BE,UAAU,CAACI,QAAQ,CACpB,CAAC;IAEF,UAAK,GAAE,IAAIN,WAAW,CAAC,EAAE,EAAC,CACxBE,UAAU,CAACI,QAAQ,CACpB,CAAC;IAEF,WAAM,GAAE,IAAIN,WAAW,CAAC,EAAE,EAAC,CACzBE,UAAU,CAACI,QAAQ,CACpB,CAAC;IAEF,cAAS,GAAE,IAAIN,WAAW,CAAC,EAAE,EAAC,CAC5BE,UAAU,CAACI,QAAQ,CACpB,CAAC;IAEF,aAAQ,GAAE,IAAIN,WAAW,CAAC,EAAE,EAAC,CAC3BE,UAAU,CAACI,QAAQ,CACpB,CAAC;IACF,gBAAW,GAAE,IAAIN,WAAW,CAAC,EAAE,EAAC,CAC9BE,UAAU,CAACI,QAAQ,CACpB,CAAC;EAzDA;EA2DFC,WAAW;IACT,IAAIC,QAAQ,GAAC;MACX,UAAU,EAAC,IAAI,CAACC,QAAQ;MACxB,WAAW,EAAC,IAAI,CAACC,SAAS;MAC1B,cAAc,EAAC,IAAI,CAACC,YAAY;MAChC,sBAAsB,EAAC,IAAI,CAACC,oBAAoB;MAChD,UAAU,EAAC,IAAI,CAACC,QAAQ;MACxB,MAAM,EAAC,IAAI,CAACC,IAAI;MAChB,eAAe,EAAC,IAAI,CAACC,aAAa;MAClC,UAAU,EAAC,IAAI,CAACC,QAAQ;MACxB,SAAS,EAAC,IAAI,CAACC,OAAO;MACtB,YAAY,EAAC,IAAI,CAACC;KACnB;IACD,IAAI,CAACb,IAAI,CAACc,IAAI,CAAC,kDAAkD,EAAEX,QAAQ,CAAC,CAACY,SAAS,CAAEC,UAAc,IAAG;MAEvGC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;MACvBG,KAAK,CAAC,uCAAuC,CAAC;IAChD,CAAC,CAAC;EACJ;EACAC,IAAI;IACF,IAAI,CAAClB,WAAW,EAAE;EAEpB;CACC;AAtFYJ,mBAAmB,eAL/BJ,SAAS,CAAC;EACT2B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWzB,mBAAmB,CAsF/B;SAtFYA,mBAAmB","names":["Component","FormControl","FormGroup","Validators","AddNewItemComponent","constructor","http","required","getregister","bodydata","itemName","itemImage","itemCategory","unhealthyIngredients","proteins","fats","carbohydrates","calories","healthy","substitute","post","subscribe","resultData","console","log","alert","save","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\New folder\\NSBM\\Final project\\Final Project\\Web applications\\Admin\\Admindashboard\\src\\app\\add-new-item\\add-new-item.component.ts"],"sourcesContent":["import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-new-item',\n  templateUrl: './add-new-item.component.html',\n  styleUrls: ['./add-new-item.component.css']\n})\nexport class AddNewItemComponent {\n\n  constructor(private http: HttpClient){\n\n  };\n\n  itemName:String=\"\"\n  itemImage:String=\"\"\n  itemCategory:String=\"\"\n  unhealthyIngredients:String=\"\"\n  proteins:String=\"\"\n  fats:String=\"\"\n  carbohydrates:String=\"\"\n  calories:String=\"\"\n  healthy:String=\"\"\n  substitute:String=\"\"\n\n\n//option(event:any){\n//  this.itemCategory=event.target.value\n // console.log(this.itemCategory)\n//}\naddproduct= new FormGroup ({})\n\nitemNamec= new FormControl('',[\n  Validators.required\n])\n\nitemImagec= new FormControl('',[\n  Validators.required\n])\n\nitemCategoryc= new FormControl('',[\n  Validators.required\n])\n\ningredientsc= new FormControl('',[\n  Validators.required\n])\n\nproteinsc= new FormControl('',[\n  Validators.required\n])\n\nfatsc= new FormControl('',[\n  Validators.required\n])\n\ncarbsc= new FormControl('',[\n  Validators.required\n])\n\ncaloriesc= new FormControl('',[\n  Validators.required\n])\n\nhealthyc= new FormControl('',[\n  Validators.required\n])\nsubstitutec= new FormControl('',[\n  Validators.required\n])\n\ngetregister(){\n  let bodydata={\n    \"itemName\":this.itemName,\n    \"itemImage\":this.itemImage,\n    \"itemCategory\":this.itemCategory,\n    \"unhealthyIngredients\":this.unhealthyIngredients,\n    \"proteins\":this.proteins,\n    \"fats\":this.fats,\n    \"carbohydrates\":this.carbohydrates,\n    \"calories\":this.calories,\n    \"healthy\":this.healthy,\n    \"substitute\":this.substitute\n  };\n  this.http.post(\"http://localhost:8000/productsDetails/createdata\", bodydata).subscribe((resultData:any)=>\n  {\n    console.log(resultData);\n    alert('Customers was Successfully registered')\n  }) \n}\nsave(){\n  this.getregister()\n  \n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}