{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class LoginComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.email = \"\";\n    this.password = \"\";\n    this.isLogin = true;\n    this.errormessage = \"\";\n    this.emailc = new FormControl('', [Validators.required, Validators.email]);\n    this.passwordc = new FormControl('', [Validators.required, Validators.minLength(4)]);\n  }\n  login() {\n    console.log(this.email);\n    console.log(this.password);\n    let bodyData = {\n      email: this.email,\n      password: this.password\n    };\n    this.http.post(\"http://localhost:9002/customer/login\", bodyData).subscribe(resultData => {\n      console.log(resultData);\n      if (resultData.status) {\n        global.localStorage.setItem(\"loggedinuser\", bodyData.email);\n        // window.localStorage.removeItem(\"loggedinuser\") TODO: add this code for logout\n        this.router.navigateByUrl('/profile');\n      } else {\n        alert('Email Or Password Does not Match');\n        console.log('Incorrect');\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 2,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,EAACC,UAAU,QAAQ,gBAAgB;;;;AASvD,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,MAAc,EAAUC,IAAe;IAAvC,WAAM,GAAND,MAAM;IAAkB,SAAI,GAAJC,IAAI;IANhD,UAAK,GAAS,EAAE;IAChB,aAAQ,GAAS,EAAE;IAEnB,YAAO,GAAS,IAAI;IACpB,iBAAY,GAAS,EAAE;IA8BvB,WAAM,GAAE,IAAIL,WAAW,CAAC,EAAE,EAAE,CAC1BC,UAAU,CAACK,QAAQ,EACnBL,UAAU,CAACM,KAAK,CACjB,CAAC;IAEF,cAAS,GAAG,IAAIP,WAAW,CAAC,EAAE,EAAE,CAC9BC,UAAU,CAACK,QAAQ,EACnBL,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC;EAjCF;EACAC,KAAK;IACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,KAAK,CAAC;IACvBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;IAE1B,IAAIC,QAAQ,GAAC;MACXN,KAAK,EAAC,IAAI,CAACA,KAAK;MAChBK,QAAQ,EAAC,IAAI,CAACA;KACf;IAED,IAAI,CAACP,IAAI,CAACS,IAAI,CAAC,sCAAsC,EAACD,QAAQ,CAAC,CAACE,SAAS,CAAEC,UAAc,IAAG;MAE1FN,OAAO,CAACC,GAAG,CAACK,UAAU,CAAC;MAEvB,IAAGA,UAAU,CAACC,MAAM,EAAC;QACnBC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEP,QAAQ,CAACN,KAAK,CAAC;QAC3D;QACA,IAAI,CAACH,MAAM,CAACiB,aAAa,CAAC,UAAU,CAAC;OACtC,MAAI;QACHC,KAAK,CAAC,kCAAkC,CAAC;QACzCZ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;;IAE5B,CAAC,CAAC;EACJ;;AAlCWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI","names":["FormControl","Validators","LoginComponent","constructor","router","http","required","email","minLength","login","console","log","password","bodyData","post","subscribe","resultData","status","global","localStorage","setItem","navigateByUrl","alert","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["E:\\New folder\\NSBM\\Final project\\Final Project\\Web applications\\Admin\\Admindashboard\\src\\app\\login\\login.component.ts","E:\\New folder\\NSBM\\Final project\\Final Project\\Web applications\\Admin\\Admindashboard\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormControl,Validators } from '@angular/forms'; \nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  email: string=\"\";\n  password: string=\"\";\n\n  isLogin:boolean=true;\n  errormessage: string=\"\"\n\n  constructor(private router: Router, private http:HttpClient){\n\n    \n  }\n  login(){\n    console.log(this.email);\n    console.log(this.password)\n\n    let bodyData={\n      email:this.email,\n      password:this.password\n    };\n\n    this.http.post(\"http://localhost:9002/customer/login\",bodyData).subscribe((resultData:any)=>\n    {\n      console.log(resultData);\n\n      if(resultData.status){\n        global.localStorage.setItem(\"loggedinuser\", bodyData.email)\n        // window.localStorage.removeItem(\"loggedinuser\") TODO: add this code for logout\n        this.router.navigateByUrl('/profile')\n      }else{\n        alert('Email Or Password Does not Match')\n        console.log('Incorrect')\n      }\n    })\n  }\n\n  emailc= new FormControl('', [\n    Validators.required,\n    Validators.email\n  ])\n\n  passwordc = new FormControl('', [\n    Validators.required,\n    Validators.minLength(4)\n  ])\n}\n","<p>login works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}